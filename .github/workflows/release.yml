name: release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to publish"
        required: false
        default: "latest"
  release:
    types: [published]

jobs:
  cache-and-install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Cache data for pnpm and node_modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.pnpm-store
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v4
        with:
          version: 8.15.8
          run_install: true
  container:
    permissions: write-all
    runs-on: ubuntu-latest
    needs:
      - cache-and-install
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push yan-api image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/yan-api:${{ github.event.inputs.version || 'latest' }} -f packages/yan-api/Dockerfile .
          docker push ghcr.io/${{ github.repository }}/yan-api:${{ github.event.inputs.version || 'latest' }}
      - name: Build and push yan-web image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/yan-web:${{ github.event.inputs.version || 'latest' }} -f packages/yan-web/Dockerfile .
          docker push ghcr.io/${{ github.repository }}/yan-web:${{ github.event.inputs.version || 'latest' }}
